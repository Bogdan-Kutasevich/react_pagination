{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","items","pageCount","Math","ceil","pages","getNextItemPage","nextPage","className","cn","href","onClick","map","item","App","useState","length","setPerPage","setCurrentPage","itemsOnPage","setItemsOnPage","id","onChange","event","target","value","htmlFor","numberOfPage","currentItems","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAIMC,EAAQX,EAFIQ,EAAUC,EAAcD,EAAU,EACpCA,EAAUC,EAAcF,EAAQA,EAAQC,EAAUC,GAE5DG,EAAYC,KAAKC,KAAKP,EAAQC,GAC9BO,EAAQf,EAAW,EAAGY,GACtBI,EAAkB,SAACC,GAIvB,MAAO,CAHeT,EAAUS,EAAWT,EAAU,EACjCA,EAAUS,EAAWV,EAAQA,EAAQC,EAAUS,IAKrE,OACE,qCACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAE7B,WAAcV,EAAc,KAF9B,SAKE,mBACE,UAAQ,WACRS,UAAU,YACVE,KAAK,QACL,gBAAc,OACdC,QAAS,kBAAMX,EACbD,EAAc,EAAGO,EAAgBP,EAAc,KANnD,oBAYDM,EAAMO,KAAI,SAAAC,GAAI,OACb,oBAAIL,UAAWC,IAAG,YAAa,CAE7B,OAAUV,IAAgBc,IAF5B,SAKE,mBACE,UAAQ,WACRL,UAAU,YACVE,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,EAAMP,EAAgBO,KAJpD,SAMGA,SAIP,oBAAIL,UAAWC,IAAG,YAAa,CAE7B,SAAYV,GAAeG,IAF7B,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVE,KAAK,QACL,gBAAc,QACdC,QAAS,kBAAMX,EACbD,EAAc,EAAGO,EAAgBP,EAAc,KANnD,uBAaJ,6BACGE,EAAMW,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,wBAA4BA,cC9EhCZ,EAAQX,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPoB,EAAgB,WAC3B,MAAgBC,mBAASd,EAAMe,QAAxBnB,EAAP,oBACA,EAA8BkB,mBAAS,GAAvC,mBAAOjB,EAAP,KAAgBmB,EAAhB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOhB,EAAP,KAAoBmB,EAApB,KACA,EAAsCH,mBAAS,CAAC,EAAGjB,IAAnD,mBAAOqB,EAAP,KAAoBC,EAApB,KAaA,OACE,sBAAKZ,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWT,EADX,mBACiCoB,EAAY,GAD7C,cACqDA,EAAY,GADjE,eAC0EtB,EAD1E,OAIA,sBAAKW,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRa,GAAG,kBACHb,UAAU,eACVc,SAzBW,SAACC,GACpBN,GAAYM,EAAMC,OAAOC,OACzBP,EAAe,GACfE,EAAe,CAAC,GAAIG,EAAMC,OAAOC,SAuBzBA,MAAO3B,EALT,UAOE,wBAAQ2B,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBlB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEX,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAtCe,SAAC2B,EAAqBC,GACzCV,EAAeS,GACfP,EAAeQ,UCpBnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.86d94c58.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (currentPage: number, itemsOnPage: number[]) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const startItem = perPage * currentPage - perPage + 1;\n  const endItem = perPage * currentPage > total ? total : perPage * currentPage;\n  const items = getNumbers(startItem, endItem);\n  const pageCount = Math.ceil(total / perPage);\n  const pages = getNumbers(1, pageCount);\n  const getNextItemPage = (nextPage: number) => {\n    const nextStartItem = perPage * nextPage - perPage + 1;\n    const nextEndItem = perPage * nextPage > total ? total : perPage * nextPage;\n\n    return [nextStartItem, nextEndItem];\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', {\n          // eslint-disable-next-line\n          'disabled': !(currentPage > 1),\n        })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"true\"\n            onClick={() => onPageChange(\n              currentPage - 1, getNextItemPage(currentPage - 1),\n            )}\n          >\n            «\n          </a>\n        </li>\n        {pages.map(item => (\n          <li className={cn('page-item', {\n            // eslint-disable-next-line\n            'active': currentPage === item,\n          })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${item}`}\n              onClick={() => onPageChange(item, getNextItemPage(item))}\n            >\n              {item}\n            </a>\n          </li>\n        ))}\n        <li className={cn('page-item', {\n          // eslint-disable-next-line\n          'disabled': currentPage >= pageCount,\n        })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"false\"\n            onClick={() => onPageChange(\n              currentPage + 1, getNextItemPage(currentPage + 1),\n            )}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.map(item => (\n          <li data-cy=\"item\">{`Item ${item}`}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [total] = useState(items.length);\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsOnPage, setItemsOnPage] = useState([1, perPage]);\n\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n    setItemsOnPage([1, +event.target.value]);\n  };\n\n  const onPageChange = (numberOfPage:number, currentItems: number[]) => {\n    setCurrentPage(numberOfPage);\n    setItemsOnPage(currentItems);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemsOnPage[0]} - ${itemsOnPage[1]} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleSelect}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}